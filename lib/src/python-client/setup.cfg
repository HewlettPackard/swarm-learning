#######################################################################
## (C)Copyright 2023 Hewlett Packard Enterprise Development LP
## Licensed under the Apache License, Version 2.0 (the "License"); you may
## not use this file except in compliance with the License. You may obtain
## a copy of the License at
##
##    http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
## WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
## License for the specific language governing permissions and limitations
## under the License.
#######################################################################

[metadata]
name = swarmlearning

# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html?highlight=options.extras_require#specifying-values.
# We do not want to hardcode the version number here. And, unfortunately, there
# does not seem to be a direct way of referencing environment variables. We seem
# to have two choices:
#   1. Read the value of releases/current using the "file:" directive. This is
#      limited by this restriction:
#           The file: directive is sandboxed and won't reach anything outside
#           the directory containing setup.py.
#      So, we would have to create a local reference first:
#           ln -s ../../../releases releases
#      And then, in this file:
#           version = file:releases/current
#      This is further limited by the fact that SwarmVer cannot be set from the
#      command line:
#           scripts/bin/build-it --swarmver x.y.z
#
#   2. Use a python script to set SwarmVer and then, use that attribute. We opt
#      for this second approach.
version = attr:upset.__swarmVer__

# https://pypi.org/pypi?%3Aaction=list_classifiers.
classifiers =
    Operating System :: POSIX :: Linux


[options]
# The other (standard?) way is to use:
#   packages = find:
# and let the packages be discovered "automatically". However, that requires us
# to create __init__.py files in each and every package that we want discovered.
# Considering that we do not have a great many packages to include, we prefer to
# list all of them here instead of creating dummy __init__.py files all over the
# place.
packages =
    swarmlearning
    swarmlearning.com
    swarmlearning.client

# After considering version requirements from following aspects, 
# decided to have protobuf version requirement as "protobuf >= 3.15.6, <= 3.20.1".
# 1. SL currently built with protobuf 3.15.6
# 2. Tensorflow versions(2.7 to 2.9) are supported with protobuf >=3.9.2
#    Here is the link to check tensorflow depedencies.
#    https://pypi.org/pypi/tensorflow/2.7.0/json
#    https://pypi.org/pypi/tensorflow/2.9.0/json
# 3. Google docs of protobuf says Version 4.21.0 is a new major version, following 3.20.1. 
#    SL image is built with protobuf 3.15.6, and it is not compatible with 4.21.0, 
#    So decided to upper limit with 3.20.1.

# Discussed on giving upper bound for networkx, numpy, request for those packages 
# but we decided against it because all other 3 are standalone not client server 
# it would be too restrictive for user ml.
install_requires =
    networkx >= 2.6    
    numpy >= 1.19
    protobuf >= 3.15.6, <= 3.20.1
    requests >= 2.26

python_requires = >= 3.6, < 3.10


[bdist_wheel]
# We require a Linux or Unix environment - os.mkfifo is not supported on other
# operating systems. If this picture ever changes and we start supporting other
# operating systems, we should change this name.
# See https://github.com/pypa/manylinux#manylinux_2_24-debian-9-based for the
# Linux subgroup classed as manylinux_2_24. The x86_64, unfortunately, is needed
# as we could not find a way to tell wheel and pip that we do not care about the
# CPU architecture.
# Note that this requires pip >= 20.3. The version in our local python:3.8.5 is
# 20.1.1. pip in this image must be upgraded before it can install this package.
plat_name = manylinux_2_24-x86_64


[build]
# The default value is a directory called "build" under the package root. That
# would create it under our version-controlled source system, with the potential
# to get included in commit lists and pushed into upstream repositories. We do
# not like such scenarios. "attr:" did not work here - we guess it is supported
# only in the [metadata] and [options] sections. So, alas, this cannot be made
# configurable using environment variables - we are stuck with hardcoded values.
# Further, the directory must exist and should have write permissions. So, we go
# with this safe choice.
build_base = /tmp
# build_base = attr:upset.__buildBase__


[egg_info]
# The default is a directory called "swarmlearning.egg-info" under the package
# root.
egg_base = /tmp
# egg_base = attr:upset.__buildBase__
